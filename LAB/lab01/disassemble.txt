
phase8:     file format elf32-i386


Disassembly of section .init:

08049000 <_init>:
 8049000:	53                   	push   %ebx
 8049001:	83 ec 08             	sub    $0x8,%esp
 8049004:	e8 f7 00 00 00       	call   8049100 <__x86.get_pc_thunk.bx>
 8049009:	81 c3 f7 2f 00 00    	add    $0x2ff7,%ebx
 804900f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8049015:	85 c0                	test   %eax,%eax
 8049017:	74 02                	je     804901b <_init+0x1b>
 8049019:	ff d0                	call   *%eax
 804901b:	83 c4 08             	add    $0x8,%esp
 804901e:	5b                   	pop    %ebx
 804901f:	c3                   	ret

Disassembly of section .plt:

08049020 <.plt>:
 8049020:	ff 35 04 c0 04 08    	push   0x804c004
 8049026:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804902c:	00 00                	add    %al,(%eax)
	...

08049030 <printf@plt>:
 8049030:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8049036:	68 00 00 00 00       	push   $0x0
 804903b:	e9 e0 ff ff ff       	jmp    8049020 <.plt>

08049040 <fgets@plt>:
 8049040:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8049046:	68 08 00 00 00       	push   $0x8
 804904b:	e9 d0 ff ff ff       	jmp    8049020 <.plt>

08049050 <puts@plt>:
 8049050:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8049056:	68 10 00 00 00       	push   $0x10
 804905b:	e9 c0 ff ff ff       	jmp    8049020 <.plt>

08049060 <exit@plt>:
 8049060:	ff 25 18 c0 04 08    	jmp    *0x804c018
 8049066:	68 18 00 00 00       	push   $0x18
 804906b:	e9 b0 ff ff ff       	jmp    8049020 <.plt>

08049070 <strlen@plt>:
 8049070:	ff 25 1c c0 04 08    	jmp    *0x804c01c
 8049076:	68 20 00 00 00       	push   $0x20
 804907b:	e9 a0 ff ff ff       	jmp    8049020 <.plt>

08049080 <__libc_start_main@plt>:
 8049080:	ff 25 20 c0 04 08    	jmp    *0x804c020
 8049086:	68 28 00 00 00       	push   $0x28
 804908b:	e9 90 ff ff ff       	jmp    8049020 <.plt>

08049090 <fopen@plt>:
 8049090:	ff 25 24 c0 04 08    	jmp    *0x804c024
 8049096:	68 30 00 00 00       	push   $0x30
 804909b:	e9 80 ff ff ff       	jmp    8049020 <.plt>

080490a0 <memset@plt>:
 80490a0:	ff 25 28 c0 04 08    	jmp    *0x804c028
 80490a6:	68 38 00 00 00       	push   $0x38
 80490ab:	e9 70 ff ff ff       	jmp    8049020 <.plt>

Disassembly of section .text:

080490b0 <_start>:
 80490b0:	31 ed                	xor    %ebp,%ebp
 80490b2:	5e                   	pop    %esi
 80490b3:	89 e1                	mov    %esp,%ecx
 80490b5:	83 e4 f0             	and    $0xfffffff0,%esp
 80490b8:	50                   	push   %eax
 80490b9:	54                   	push   %esp
 80490ba:	52                   	push   %edx
 80490bb:	e8 23 00 00 00       	call   80490e3 <_start+0x33>
 80490c0:	81 c3 40 2f 00 00    	add    $0x2f40,%ebx
 80490c6:	8d 83 00 d5 ff ff    	lea    -0x2b00(%ebx),%eax
 80490cc:	50                   	push   %eax
 80490cd:	8d 83 a0 d4 ff ff    	lea    -0x2b60(%ebx),%eax
 80490d3:	50                   	push   %eax
 80490d4:	51                   	push   %ecx
 80490d5:	56                   	push   %esi
 80490d6:	c7 c0 f7 91 04 08    	mov    $0x80491f7,%eax
 80490dc:	50                   	push   %eax
 80490dd:	e8 9e ff ff ff       	call   8049080 <__libc_start_main@plt>
 80490e2:	f4                   	hlt
 80490e3:	8b 1c 24             	mov    (%esp),%ebx
 80490e6:	c3                   	ret
 80490e7:	66 90                	xchg   %ax,%ax
 80490e9:	66 90                	xchg   %ax,%ax
 80490eb:	66 90                	xchg   %ax,%ax
 80490ed:	66 90                	xchg   %ax,%ax
 80490ef:	90                   	nop

080490f0 <_dl_relocate_static_pie>:
 80490f0:	c3                   	ret
 80490f1:	66 90                	xchg   %ax,%ax
 80490f3:	66 90                	xchg   %ax,%ax
 80490f5:	66 90                	xchg   %ax,%ax
 80490f7:	66 90                	xchg   %ax,%ax
 80490f9:	66 90                	xchg   %ax,%ax
 80490fb:	66 90                	xchg   %ax,%ax
 80490fd:	66 90                	xchg   %ax,%ax
 80490ff:	90                   	nop

08049100 <__x86.get_pc_thunk.bx>:
 8049100:	8b 1c 24             	mov    (%esp),%ebx
 8049103:	c3                   	ret
 8049104:	66 90                	xchg   %ax,%ax
 8049106:	66 90                	xchg   %ax,%ax
 8049108:	66 90                	xchg   %ax,%ax
 804910a:	66 90                	xchg   %ax,%ax
 804910c:	66 90                	xchg   %ax,%ax
 804910e:	66 90                	xchg   %ax,%ax

08049110 <deregister_tm_clones>:
 8049110:	b8 94 c1 04 08       	mov    $0x804c194,%eax
 8049115:	3d 94 c1 04 08       	cmp    $0x804c194,%eax
 804911a:	74 24                	je     8049140 <deregister_tm_clones+0x30>
 804911c:	b8 00 00 00 00       	mov    $0x0,%eax
 8049121:	85 c0                	test   %eax,%eax
 8049123:	74 1b                	je     8049140 <deregister_tm_clones+0x30>
 8049125:	55                   	push   %ebp
 8049126:	89 e5                	mov    %esp,%ebp
 8049128:	83 ec 14             	sub    $0x14,%esp
 804912b:	68 94 c1 04 08       	push   $0x804c194
 8049130:	ff d0                	call   *%eax
 8049132:	83 c4 10             	add    $0x10,%esp
 8049135:	c9                   	leave
 8049136:	c3                   	ret
 8049137:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804913e:	66 90                	xchg   %ax,%ax
 8049140:	c3                   	ret
 8049141:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049148:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804914f:	90                   	nop

08049150 <register_tm_clones>:
 8049150:	b8 94 c1 04 08       	mov    $0x804c194,%eax
 8049155:	2d 94 c1 04 08       	sub    $0x804c194,%eax
 804915a:	c1 f8 02             	sar    $0x2,%eax
 804915d:	89 c2                	mov    %eax,%edx
 804915f:	c1 ea 1f             	shr    $0x1f,%edx
 8049162:	01 d0                	add    %edx,%eax
 8049164:	d1 f8                	sar    %eax
 8049166:	74 20                	je     8049188 <register_tm_clones+0x38>
 8049168:	ba 00 00 00 00       	mov    $0x0,%edx
 804916d:	85 d2                	test   %edx,%edx
 804916f:	74 17                	je     8049188 <register_tm_clones+0x38>
 8049171:	55                   	push   %ebp
 8049172:	89 e5                	mov    %esp,%ebp
 8049174:	83 ec 10             	sub    $0x10,%esp
 8049177:	50                   	push   %eax
 8049178:	68 94 c1 04 08       	push   $0x804c194
 804917d:	ff d2                	call   *%edx
 804917f:	83 c4 10             	add    $0x10,%esp
 8049182:	c9                   	leave
 8049183:	c3                   	ret
 8049184:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049188:	c3                   	ret
 8049189:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08049190 <__do_global_dtors_aux>:
 8049190:	80 3d a4 c1 04 08 00 	cmpb   $0x0,0x804c1a4
 8049197:	75 17                	jne    80491b0 <__do_global_dtors_aux+0x20>
 8049199:	55                   	push   %ebp
 804919a:	89 e5                	mov    %esp,%ebp
 804919c:	83 ec 08             	sub    $0x8,%esp
 804919f:	e8 6c ff ff ff       	call   8049110 <deregister_tm_clones>
 80491a4:	c6 05 a4 c1 04 08 01 	movb   $0x1,0x804c1a4
 80491ab:	c9                   	leave
 80491ac:	c3                   	ret
 80491ad:	8d 76 00             	lea    0x0(%esi),%esi
 80491b0:	c3                   	ret
 80491b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80491b8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80491bf:	90                   	nop

080491c0 <frame_dummy>:
 80491c0:	eb 8e                	jmp    8049150 <register_tm_clones>

080491c2 <fixinput>:
 80491c2:	55                   	push   %ebp
 80491c3:	89 e5                	mov    %esp,%ebp
 80491c5:	83 ec 10             	sub    $0x10,%esp
 80491c8:	8b 45 0c             	mov    0xc(%ebp),%eax
 80491cb:	8d 50 ff             	lea    -0x1(%eax),%edx
 80491ce:	8b 45 08             	mov    0x8(%ebp),%eax
 80491d1:	01 d0                	add    %edx,%eax
 80491d3:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80491d6:	eb 14                	jmp    80491ec <fixinput+0x2a>
 80491d8:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80491db:	0f b6 00             	movzbl (%eax),%eax
 80491de:	3c 0a                	cmp    $0xa,%al
 80491e0:	75 06                	jne    80491e8 <fixinput+0x26>
 80491e2:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80491e5:	c6 00 00             	movb   $0x0,(%eax)
 80491e8:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)
 80491ec:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80491ef:	3b 45 08             	cmp    0x8(%ebp),%eax
 80491f2:	73 e4                	jae    80491d8 <fixinput+0x16>
 80491f4:	90                   	nop
 80491f5:	c9                   	leave
 80491f6:	c3                   	ret

080491f7 <main>:
 80491f7:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80491fb:	83 e4 f0             	and    $0xfffffff0,%esp
 80491fe:	ff 71 fc             	push   -0x4(%ecx)
 8049201:	55                   	push   %ebp
 8049202:	89 e5                	mov    %esp,%ebp
 8049204:	53                   	push   %ebx
 8049205:	51                   	push   %ecx
 8049206:	83 ec 10             	sub    $0x10,%esp
 8049209:	89 cb                	mov    %ecx,%ebx
 804920b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049212:	83 3b 01             	cmpl   $0x1,(%ebx)
 8049215:	75 0a                	jne    8049221 <main+0x2a>
 8049217:	a1 a0 c1 04 08       	mov    0x804c1a0,%eax
 804921c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804921f:	eb 6a                	jmp    804928b <main+0x94>
 8049221:	83 3b 02             	cmpl   $0x2,(%ebx)
 8049224:	75 45                	jne    804926b <main+0x74>
 8049226:	8b 43 04             	mov    0x4(%ebx),%eax
 8049229:	83 c0 04             	add    $0x4,%eax
 804922c:	8b 00                	mov    (%eax),%eax
 804922e:	83 ec 08             	sub    $0x8,%esp
 8049231:	68 12 a0 04 08       	push   $0x804a012
 8049236:	50                   	push   %eax
 8049237:	e8 54 fe ff ff       	call   8049090 <fopen@plt>
 804923c:	83 c4 10             	add    $0x10,%esp
 804923f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049242:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8049246:	75 43                	jne    804928b <main+0x94>
 8049248:	8b 43 04             	mov    0x4(%ebx),%eax
 804924b:	83 c0 04             	add    $0x4,%eax
 804924e:	8b 00                	mov    (%eax),%eax
 8049250:	83 ec 08             	sub    $0x8,%esp
 8049253:	50                   	push   %eax
 8049254:	68 14 a0 04 08       	push   $0x804a014
 8049259:	e8 d2 fd ff ff       	call   8049030 <printf@plt>
 804925e:	83 c4 10             	add    $0x10,%esp
 8049261:	83 ec 0c             	sub    $0xc,%esp
 8049264:	6a 01                	push   $0x1
 8049266:	e8 f5 fd ff ff       	call   8049060 <exit@plt>
 804926b:	8b 43 04             	mov    0x4(%ebx),%eax
 804926e:	8b 00                	mov    (%eax),%eax
 8049270:	83 ec 08             	sub    $0x8,%esp
 8049273:	50                   	push   %eax
 8049274:	68 38 a0 04 08       	push   $0x804a038
 8049279:	e8 b2 fd ff ff       	call   8049030 <printf@plt>
 804927e:	83 c4 10             	add    $0x10,%esp
 8049281:	83 ec 0c             	sub    $0xc,%esp
 8049284:	6a 01                	push   $0x1
 8049286:	e8 d5 fd ff ff       	call   8049060 <exit@plt>
 804928b:	83 ec 0c             	sub    $0xc,%esp
 804928e:	68 50 a0 04 08       	push   $0x804a050
 8049293:	e8 b8 fd ff ff       	call   8049050 <puts@plt>
 8049298:	83 c4 10             	add    $0x10,%esp
 804929b:	83 ec 0c             	sub    $0xc,%esp
 804929e:	68 7c a0 04 08       	push   $0x804a07c
 80492a3:	e8 a8 fd ff ff       	call   8049050 <puts@plt>
 80492a8:	83 c4 10             	add    $0x10,%esp
 80492ab:	83 ec 04             	sub    $0x4,%esp
 80492ae:	68 00 01 00 00       	push   $0x100
 80492b3:	6a 00                	push   $0x0
 80492b5:	68 c0 c1 04 08       	push   $0x804c1c0
 80492ba:	e8 e1 fd ff ff       	call   80490a0 <memset@plt>
 80492bf:	83 c4 10             	add    $0x10,%esp
 80492c2:	83 ec 04             	sub    $0x4,%esp
 80492c5:	ff 75 f4             	push   -0xc(%ebp)
 80492c8:	68 00 01 00 00       	push   $0x100
 80492cd:	68 c0 c1 04 08       	push   $0x804c1c0
 80492d2:	e8 69 fd ff ff       	call   8049040 <fgets@plt>
 80492d7:	83 c4 10             	add    $0x10,%esp
 80492da:	85 c0                	test   %eax,%eax
 80492dc:	75 1a                	jne    80492f8 <main+0x101>
 80492de:	83 ec 0c             	sub    $0xc,%esp
 80492e1:	68 b0 a0 04 08       	push   $0x804a0b0
 80492e6:	e8 65 fd ff ff       	call   8049050 <puts@plt>
 80492eb:	83 c4 10             	add    $0x10,%esp
 80492ee:	83 ec 0c             	sub    $0xc,%esp
 80492f1:	6a 01                	push   $0x1
 80492f3:	e8 68 fd ff ff       	call   8049060 <exit@plt>
 80492f8:	83 ec 08             	sub    $0x8,%esp
 80492fb:	68 00 01 00 00       	push   $0x100
 8049300:	68 c0 c1 04 08       	push   $0x804c1c0
 8049305:	e8 b8 fe ff ff       	call   80491c2 <fixinput>
 804930a:	83 c4 10             	add    $0x10,%esp
 804930d:	83 ec 0c             	sub    $0xc,%esp
 8049310:	68 c0 c1 04 08       	push   $0x804c1c0
 8049315:	e8 e7 00 00 00       	call   8049401 <phase>
 804931a:	83 c4 10             	add    $0x10,%esp
 804931d:	85 c0                	test   %eax,%eax
 804931f:	74 12                	je     8049333 <main+0x13c>
 8049321:	83 ec 0c             	sub    $0xc,%esp
 8049324:	68 d8 a0 04 08       	push   $0x804a0d8
 8049329:	e8 22 fd ff ff       	call   8049050 <puts@plt>
 804932e:	83 c4 10             	add    $0x10,%esp
 8049331:	eb 10                	jmp    8049343 <main+0x14c>
 8049333:	83 ec 0c             	sub    $0xc,%esp
 8049336:	68 14 a1 04 08       	push   $0x804a114
 804933b:	e8 10 fd ff ff       	call   8049050 <puts@plt>
 8049340:	83 c4 10             	add    $0x10,%esp
 8049343:	b8 00 00 00 00       	mov    $0x0,%eax
 8049348:	8d 65 f8             	lea    -0x8(%ebp),%esp
 804934b:	59                   	pop    %ecx
 804934c:	5b                   	pop    %ebx
 804934d:	5d                   	pop    %ebp
 804934e:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8049351:	c3                   	ret

08049352 <__func_lyPFYDwN>:
 8049352:	55                   	push   %ebp
 8049353:	89 e5                	mov    %esp,%ebp
 8049355:	90                   	nop
 8049356:	90                   	nop
 8049357:	90                   	nop
 8049358:	90                   	nop
 8049359:	90                   	nop
 804935a:	90                   	nop
 804935b:	90                   	nop
 804935c:	90                   	nop
 804935d:	90                   	nop
 804935e:	90                   	nop
 804935f:	90                   	nop
 8049360:	90                   	nop
 8049361:	90                   	nop
 8049362:	90                   	nop
 8049363:	90                   	nop
 8049364:	90                   	nop
 8049365:	90                   	nop
 8049366:	90                   	nop
 8049367:	90                   	nop
 8049368:	90                   	nop
 8049369:	90                   	nop
 804936a:	90                   	nop
 804936b:	90                   	nop
 804936c:	90                   	nop
 804936d:	90                   	nop
 804936e:	90                   	nop
 804936f:	90                   	nop
 8049370:	90                   	nop
 8049371:	90                   	nop
 8049372:	90                   	nop
 8049373:	90                   	nop
 8049374:	90                   	nop
 8049375:	90                   	nop
 8049376:	90                   	nop
 8049377:	90                   	nop
 8049378:	90                   	nop
 8049379:	90                   	nop
 804937a:	90                   	nop
 804937b:	90                   	nop
 804937c:	90                   	nop
 804937d:	90                   	nop
 804937e:	5d                   	pop    %ebp
 804937f:	c3                   	ret

08049380 <access>:
 8049380:	55                   	push   %ebp
 8049381:	89 e5                	mov    %esp,%ebp
 8049383:	83 ec 14             	sub    $0x14,%esp
 8049386:	8b 45 08             	mov    0x8(%ebp),%eax
 8049389:	88 45 ec             	mov    %al,-0x14(%ebp)
 804938c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049393:	a1 90 c1 04 08       	mov    0x804c190,%eax
 8049398:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804939b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80493a2:	eb 4f                	jmp    80493f3 <access+0x73>
 80493a4:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493a7:	0f b6 00             	movzbl (%eax),%eax
 80493aa:	38 45 ec             	cmp    %al,-0x14(%ebp)
 80493ad:	75 35                	jne    80493e4 <access+0x64>
 80493af:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493b2:	83 c0 01             	add    $0x1,%eax
 80493b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80493b8:	a1 90 c1 04 08       	mov    0x804c190,%eax
 80493bd:	39 45 fc             	cmp    %eax,-0x4(%ebp)
 80493c0:	74 39                	je     80493fb <access+0x7b>
 80493c2:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493c5:	8b 50 04             	mov    0x4(%eax),%edx
 80493c8:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80493cb:	89 50 04             	mov    %edx,0x4(%eax)
 80493ce:	8b 15 90 c1 04 08    	mov    0x804c190,%edx
 80493d4:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493d7:	89 50 04             	mov    %edx,0x4(%eax)
 80493da:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493dd:	a3 90 c1 04 08       	mov    %eax,0x804c190
 80493e2:	eb 17                	jmp    80493fb <access+0x7b>
 80493e4:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493e7:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80493ea:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80493ed:	8b 40 04             	mov    0x4(%eax),%eax
 80493f0:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80493f3:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 80493f7:	75 ab                	jne    80493a4 <access+0x24>
 80493f9:	eb 01                	jmp    80493fc <access+0x7c>
 80493fb:	90                   	nop
 80493fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80493ff:	c9                   	leave
 8049400:	c3                   	ret

08049401 <phase>:
 8049401:	55                   	push   %ebp
 8049402:	89 e5                	mov    %esp,%ebp
 8049404:	83 ec 18             	sub    $0x18,%esp
 8049407:	83 ec 0c             	sub    $0xc,%esp
 804940a:	ff 75 08             	push   0x8(%ebp)
 804940d:	e8 5e fc ff ff       	call   8049070 <strlen@plt>
 8049412:	83 c4 10             	add    $0x10,%esp
 8049415:	83 f8 0a             	cmp    $0xa,%eax
 8049418:	74 07                	je     8049421 <phase+0x20>
 804941a:	b8 00 00 00 00       	mov    $0x0,%eax
 804941f:	eb 73                	jmp    8049494 <phase+0x93>
 8049421:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8049428:	eb 1e                	jmp    8049448 <phase+0x47>
 804942a:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804942d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049430:	01 d0                	add    %edx,%eax
 8049432:	0f b6 00             	movzbl (%eax),%eax
 8049435:	0f be c0             	movsbl %al,%eax
 8049438:	83 ec 0c             	sub    $0xc,%esp
 804943b:	50                   	push   %eax
 804943c:	e8 3f ff ff ff       	call   8049380 <access>
 8049441:	83 c4 10             	add    $0x10,%esp
 8049444:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8049448:	83 7d f0 09          	cmpl   $0x9,-0x10(%ebp)
 804944c:	7e dc                	jle    804942a <phase+0x29>
 804944e:	a1 90 c1 04 08       	mov    0x804c190,%eax
 8049453:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049456:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804945d:	eb 2a                	jmp    8049489 <phase+0x88>
 804945f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049462:	0f b6 50 01          	movzbl 0x1(%eax),%edx
 8049466:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049469:	05 4c a1 04 08       	add    $0x804a14c,%eax
 804946e:	0f b6 00             	movzbl (%eax),%eax
 8049471:	38 c2                	cmp    %al,%dl
 8049473:	74 07                	je     804947c <phase+0x7b>
 8049475:	b8 00 00 00 00       	mov    $0x0,%eax
 804947a:	eb 18                	jmp    8049494 <phase+0x93>
 804947c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804947f:	8b 40 04             	mov    0x4(%eax),%eax
 8049482:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049485:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8049489:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804948d:	75 d0                	jne    804945f <phase+0x5e>
 804948f:	b8 01 00 00 00       	mov    $0x1,%eax
 8049494:	c9                   	leave
 8049495:	c3                   	ret
 8049496:	66 90                	xchg   %ax,%ax
 8049498:	66 90                	xchg   %ax,%ax
 804949a:	66 90                	xchg   %ax,%ax
 804949c:	66 90                	xchg   %ax,%ax
 804949e:	66 90                	xchg   %ax,%ax

080494a0 <__libc_csu_init>:
 80494a0:	55                   	push   %ebp
 80494a1:	57                   	push   %edi
 80494a2:	56                   	push   %esi
 80494a3:	53                   	push   %ebx
 80494a4:	e8 57 fc ff ff       	call   8049100 <__x86.get_pc_thunk.bx>
 80494a9:	81 c3 57 2b 00 00    	add    $0x2b57,%ebx
 80494af:	83 ec 0c             	sub    $0xc,%esp
 80494b2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 80494b6:	e8 45 fb ff ff       	call   8049000 <_init>
 80494bb:	8d b3 10 ff ff ff    	lea    -0xf0(%ebx),%esi
 80494c1:	8d 83 0c ff ff ff    	lea    -0xf4(%ebx),%eax
 80494c7:	29 c6                	sub    %eax,%esi
 80494c9:	c1 fe 02             	sar    $0x2,%esi
 80494cc:	74 1f                	je     80494ed <__libc_csu_init+0x4d>
 80494ce:	31 ff                	xor    %edi,%edi
 80494d0:	83 ec 04             	sub    $0x4,%esp
 80494d3:	55                   	push   %ebp
 80494d4:	ff 74 24 2c          	push   0x2c(%esp)
 80494d8:	ff 74 24 2c          	push   0x2c(%esp)
 80494dc:	ff 94 bb 0c ff ff ff 	call   *-0xf4(%ebx,%edi,4)
 80494e3:	83 c7 01             	add    $0x1,%edi
 80494e6:	83 c4 10             	add    $0x10,%esp
 80494e9:	39 fe                	cmp    %edi,%esi
 80494eb:	75 e3                	jne    80494d0 <__libc_csu_init+0x30>
 80494ed:	83 c4 0c             	add    $0xc,%esp
 80494f0:	5b                   	pop    %ebx
 80494f1:	5e                   	pop    %esi
 80494f2:	5f                   	pop    %edi
 80494f3:	5d                   	pop    %ebp
 80494f4:	c3                   	ret
 80494f5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80494fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08049500 <__libc_csu_fini>:
 8049500:	c3                   	ret

Disassembly of section .fini:

08049504 <_fini>:
 8049504:	53                   	push   %ebx
 8049505:	83 ec 08             	sub    $0x8,%esp
 8049508:	e8 f3 fb ff ff       	call   8049100 <__x86.get_pc_thunk.bx>
 804950d:	81 c3 f3 2a 00 00    	add    $0x2af3,%ebx
 8049513:	83 c4 08             	add    $0x8,%esp
 8049516:	5b                   	pop    %ebx
 8049517:	c3                   	ret
